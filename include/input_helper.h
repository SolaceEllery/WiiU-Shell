#pragma once

#include <vpad/input.h>

typedef enum InputKeys {
    KEY_A = VPAD_BUTTON_A,
    KEY_B = VPAD_BUTTON_B,
    KEY_X = VPAD_BUTTON_X,
    KEY_Y = VPAD_BUTTON_Y,
    KEY_LSTICK = VPAD_BUTTON_STICK_L,
    KEY_RSTICK = VPAD_BUTTON_STICK_R,
    KEY_L = VPAD_BUTTON_L,
    KEY_R = VPAD_BUTTON_R,
    KEY_ZL = VPAD_BUTTON_ZL,
    KEY_ZR = VPAD_BUTTON_ZR,
    KEY_PLUS = VPAD_BUTTON_PLUS,
    KEY_MINUS = VPAD_BUTTON_MINUS,
    KEY_DLEFT = VPAD_BUTTON_LEFT,
    KEY_DUP = VPAD_BUTTON_UP,
    KEY_DRIGHT = VPAD_BUTTON_RIGHT,
    KEY_DDOWN = VPAD_BUTTON_DOWN,
    KEY_LSTICK_LEFT = VPAD_STICK_L_EMULATION_LEFT,
    KEY_LSTICK_UP = VPAD_STICK_L_EMULATION_UP,
    KEY_LSTICK_RIGHT = VPAD_STICK_L_EMULATION_RIGHT,
    KEY_LSTICK_DOWN = VPAD_STICK_L_EMULATION_DOWN,
    KEY_RSTICK_LEFT = VPAD_STICK_R_EMULATION_LEFT,
    KEY_RSTICK_UP = VPAD_STICK_R_EMULATION_UP,
    KEY_RSTICK_RIGHT = VPAD_STICK_R_EMULATION_RIGHT,
    KEY_RSTICK_DOWN = VPAD_STICK_R_EMULATION_DOWN,
    KEY_UP = KEY_DUP | KEY_LSTICK_UP | KEY_RSTICK_UP,
    KEY_DOWN = KEY_DDOWN | KEY_LSTICK_DOWN | KEY_RSTICK_DOWN,
    KEY_LEFT = KEY_DLEFT | KEY_LSTICK_LEFT | KEY_RSTICK_LEFT,
    KEY_RIGHT = KEY_DRIGHT | KEY_LSTICK_RIGHT | KEY_RSTICK_RIGHT,
} InputKeys;

typedef struct TouchPosition {
    uint32_t px;
    uint32_t py;
} TouchPosition;

void Input_Update();
uint8_t Input_BatteryStatus();
uint32_t Input_KeysHeld();
uint32_t Input_KeysDown();
uint32_t Input_KeysUp();
uint32_t Input_TouchCount();
void Input_TouchPos(TouchPosition *pos, uint32_t touch);